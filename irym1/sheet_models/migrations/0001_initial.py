# Generated by Django 5.2 on 2025-08-09 09:42

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Analysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(max_length=2000)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ML_Models',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(choices=[('Logistic Regression', 'Logistic Regression'), ('Linear Regression', 'Linear Regression'), ('Ridge Regression', 'Ridge Regression'), ('Lasso Regression', 'Lasso Regression'), ('Decision Tree Classifier', 'Decision Tree Classifier'), ('Decision Tree Regressor', 'Decision Tree Regressor'), ('Random Forest Classifier', 'Random Forest Classifier'), ('Random Forest Regressor', 'Random Forest Regressor'), ('Gradient Boosting Classifier', 'Gradient Boosting Classifier'), ('Gradient Boosting Regressor', 'Gradient Boosting Regressor'), ('AdaBoost Classifier', 'AdaBoost Classifier'), ('AdaBoost Regressor', 'AdaBoost Regressor'), ('Support Vector Classifier', 'Support Vector Classifier'), ('Support Vector Regressor', 'Support Vector Regressor'), ('Gaussian Naive Bayes', 'Gaussian Naive Bayes'), ('KNN Classifier', 'KNN Classifier'), ('KNN Regressor', 'KNN Regressor'), ('KMeans Clustering', 'KMeans Clustering')], max_length=200)),
                ('description', models.TextField(max_length=2000)),
                ('model_type', models.CharField(choices=[('classification', 'Classification'), ('regression', 'Regression'), ('clustering', 'Clustering')], max_length=20)),
                ('analysis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analysis_ml_models', to='sheet_models.analysis')),
            ],
        ),
        migrations.CreateModel(
            name='ModelHyperParameters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parameter_name', models.CharField(max_length=100)),
                ('value', models.DecimalField(decimal_places=8, max_digits=20)),
                ('ml_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hyperparameters', to='sheet_models.ml_models')),
            ],
        ),
        migrations.CreateModel(
            name='Prompt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prompt', models.TextField(max_length=4000)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_prompts', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='analysis',
            name='prompt',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prompt_analyses', to='sheet_models.prompt'),
        ),
        migrations.CreateModel(
            name='RawData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.FileField(help_text='Upload the raw data file', upload_to='raw_data_files/')),
                ('size', models.PositiveIntegerField(help_text='Size of the data in bytes')),
                ('type', models.CharField(choices=[('csv', 'CSV'), ('excel', 'Excel'), ('json', 'JSON'), ('xml', 'XML')], default='csv', help_text='Type/format of the raw data file', max_length=20)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the file was uploaded')),
                ('prompt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='raw_data', to='sheet_models.prompt')),
            ],
        ),
    ]
