# Generated by Django 5.2 on 2025-09-02 06:48

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('sheet_models', '0003_cleaneddata'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MLProject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('pipeline_type', models.CharField(choices=[('Classification', 'Classification'), ('Regression', 'Regression'), ('Clustering', 'Clustering')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('analysis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ml_projects', to='sheet_models.analysis')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MLConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('algorithm', models.CharField(max_length=100)),
                ('hyperparameters', models.JSONField(default=dict)),
                ('validation_split', models.FloatField(default=0.2)),
                ('cross_validation_folds', models.IntegerField(default=5)),
                ('random_seed', models.IntegerField(default=42)),
                ('use_cross_validation', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('project', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='ml_models.mlproject')),
            ],
        ),
        migrations.CreateModel(
            name='DatasetInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_path', models.CharField(max_length=500)),
                ('file_size', models.BigIntegerField()),
                ('num_rows', models.IntegerField()),
                ('num_columns', models.IntegerField()),
                ('column_names', models.JSONField()),
                ('column_types', models.JSONField()),
                ('target_column', models.CharField(blank=True, max_length=100)),
                ('has_missing_values', models.BooleanField(default=False)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('project', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='ml_models.mlproject')),
            ],
        ),
        migrations.CreateModel(
            name='PredictionRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('input_data', models.JSONField()),
                ('prediction_result', models.JSONField(blank=True, null=True)),
                ('confidence_score', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ml_models.mlproject')),
            ],
        ),
        migrations.CreateModel(
            name='SystemLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(choices=[('INFO', 'Info'), ('WARNING', 'Warning'), ('ERROR', 'Error'), ('DEBUG', 'Debug')], max_length=10)),
                ('message', models.TextField()),
                ('function_name', models.CharField(blank=True, max_length=100)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('extra_data', models.JSONField(blank=True, default=dict)),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ml_models.mlproject')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='TrainingResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('model_path', models.CharField(blank=True, max_length=500)),
                ('metrics', models.JSONField(default=dict)),
                ('training_time', models.FloatField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ml_models.mlproject')),
            ],
        ),
        migrations.CreateModel(
            name='EvaluationResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('evaluation_metrics', models.JSONField(default=dict)),
                ('plots_data', models.JSONField(default=dict)),
                ('confusion_matrix', models.JSONField(blank=True, null=True)),
                ('classification_report', models.JSONField(blank=True, null=True)),
                ('feature_importance', models.JSONField(default=dict)),
                ('evaluation_time', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('training_result', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='ml_models.trainingresult')),
            ],
        ),
    ]
